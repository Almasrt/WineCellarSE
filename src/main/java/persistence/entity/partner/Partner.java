package persistence.entity.partner;

import com.mongodb.lang.Nullable;
import org.bson.types.ObjectId;
import persistence.entity.Entity;

import java.util.Objects;

public class Partner implements Entity<Partner> {

	private ObjectId id;
	private String name;
	private PartnerType type;
	private String link;
	private String address;
	@Nullable
	private String description;
	@Nullable
	private String phone;
	@Nullable
	private String logo;


	public Partner() { }

	public Partner(String name, PartnerType type, String link, String address) {
		this.name = name;
		this.type = type;
		this.link = link;
		this.address = address;
	}

	/**
	 * The user should not be able to set the id. It is automatically generated by the database.
	 */
	@Override
	public void handleOnCreate() {
		this.id = null;
	}

	public ObjectId getId() {
		return id;
	}

	public void setId(ObjectId id) {
		this.id = id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public PartnerType getType() {
		return type;
	}

	public void setType(PartnerType type) {
		this.type = type;
	}

	public String getLink() {
		return link;
	}

	public void setLink(String link) {
		this.link = link;
	}

	public String getAddress() {
		return address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Nullable
	public String getDescription() {
		return description;
	}

	public void setDescription(@Nullable String description) {
		this.description = description;
	}

	@Nullable
	public String getPhone() {
		return phone;
	}

	public void setPhone(@Nullable String phone) {
		this.phone = phone;
	}

	@Nullable
	public String getLogo() {
		return logo;
	}

	public void setLogo(@Nullable String logo) {
		this.logo = logo;
	}

	@Override
	public boolean equals(Object o) {
		if (this == o) return true;
		if (o == null || getClass() != o.getClass()) return false;
		Partner partner = (Partner) o;
		return Objects.equals(id, partner.id) && Objects.equals(name, partner.name) && Objects.equals(type, partner.type) && Objects.equals(link, partner.link) && Objects.equals(address, partner.address) && Objects.equals(description, partner.description) && Objects.equals(phone, partner.phone) && Objects.equals(logo, partner.logo);
	}

	@Override
	public int hashCode() {
		return Objects.hash(id, name, type, link, address, description, phone, logo);
	}

	@Override
	public int compareTo(Partner o) {
		return name.compareTo(o.name);
	}
}
